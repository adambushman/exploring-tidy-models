---
title: "Laptop Price Regression"
description: "Leveraging decision trees in {tidymodels} to predict the price of laptops"
author: "Adam Bushman"
format: html
---


# Introduction

Data sourced from Kaggle,
[Laptop Price](https://www.kaggle.com/datasets/muhammetvarl/laptop-price), accessed January 26th, 2024. Downloaded extracts are saved within this repository and loaded for purpose of modeling.

# Analysis Prep

```{r}

# Loading libraries
library('tidyverse')
library('tidymodels')
library('stringr')

# Reading the data
here::i_am("projects/decision-tree-regression/laptop-price/model.qmd")
lap_data <- read.csv('laptop_price.csv')

```


# Simple Exploratory Data Analysis

```{r}

# Peek at the data
skimr::skim(lap_data)

# See some examples
glimpse(lap_data)

```

# Feature Engineering

```{r}

# Extract resolution
getSqPix <- function(x) {
  w = str_extract(x, "\\d+(?=x)")
  h = str_extract(x, "(?<=x)\\d+")
  # a_pos = str_locate(x, "\\d+x")
  return(as.integer(w) * as.integer(h))
}

# Extract harddrive size
getHD <- function(x) {
  values <- str_extract_all(x, "\\b\\d\\S*")[[1]]
  total = 0
  for(v in values) {
    size = stringr::str_extract(v, "\\d+")
    unit = str_sub(v, str_length(v) - 1)
    total = total + (as.integer(size) * ifelse(unit == "TB", 1000, 1))
  }
  return(total)
}

# Extract harddrive size
getHDT <- function(x) {
  type = c()
  if(stringr::str_detect(x, "SSD")) {
    type[length(type) + 1] = "SSD"
  }
  if(stringr::str_detect(x, "HDD")) {
    type[length(type) + 1] = "HDD"
  }
  if(stringr::str_detect(x, "Hybrid")) {
    type[length(type) + 1] = "Hybrid"
  }
  if(stringr::str_detect(x, "Flash")) {
    type[length(type) + 1] = "Flash Storage"
  }
  
  return(paste(type, collapse = "-"))
}

# Modifiy features
lap_data_c <- 
  lap_data %>%
  mutate(
    Company = factor(Company), 
    TypeName = factor(TypeName), 
    SqPixels = purrr::map_int(ScreenResolution, getSqPix), 
    RamRGB = as.integer(stringr::str_extract(Ram, "\\d+")), 
    HardDriveGB = purrr::map_int(Memory, getHD), 
    HardDriveType = factor(purrr::map_chr(Memory, getHDT)), 
    OpSys = factor(OpSys), 
    WeightKg = as.numeric(str_replace(Weight, "kg", ""))
  )

```


# Setup training and testing sets

```{r}

# Defining a split
lap_split <- initial_split(lap_data_c)

# Data sets
lap_train <- training(lap_split)
lap_test <- testing(lap_split)

```


# Defining the model, recipe

```{r}

# Model
lap_mod <- 
  decision_tree(tree_depth = tune()) %>%
  set_engine("spark") %>%
  set_mode("regression")

# Recipe
lap_rec <-
  recipe(Price_euros ~ ., data) %>%
  update_role(laptop_ID, Product, Cpu, Gpu, new_role = "ID")


```

